General topics for developers and devops engineers
----------------------------------------------------

1.	Version Controlling, Centralized vs Distributed

Unlike a centralized version control system, a distributed version control doesn't have a single point of failure, because developers clone repositories on their distributed version control workstations, creating multiple backup copies.

2.	Config settings for the repo
-----------------------------------------------------
 
 git config --global user.name <name>
 git config --global user.email <email id>
 
 Initiate the repo from the directory where you are starting your project
 -------------------------------------------------------------------------


 mkdir my_new_repo
 cd my_new_repo
 git init 

 To check the status of the working directory
 --------------------------------------------

 git status

 Add the files
 -------------

 git add . or git add <filename>

 commit the files to local repository
 ------------------------------------

 git commit -m "description"

 to revert the changes
 ---------------------

 git restore <filename>
 git restore --staged <filename>

add remote repos
-----------------
git remote add origin <https URL or SSH URL>

to see the logs
----------------
git log
git log --oneline
git show <commit-hash>


3.	Git SCM, Git Branching

creation of branches and listing them
-------------------------------------

git branch <brnach name>

example: 

git branch dev1
git branch dev2

list branches
------------------
git branch --list

delete branch
---------------
git branch --delete <branch-name>

example:

git branch --delete dev1

to delete branch in remote repo
---------------------------
git push origin -d <branch name>

example:

git push origin -d dev1

Branch Merge
----------------
git merge <branch-name> Note: Be in a branch to where you want to merge other branch

example:

git merge dev1

git pull & push
-------------
 git pull <origin-name>
 
 git pull origin  Note: origin is the name of the remote URL which is configured
 
 git push <origin-name>
 
 git push origin 
 
 git fetch <origin-name>
 
 git fetch origin
 
 when you fetch you need to merge those fetched changes manually
 
 git checkout origin/master
 
 check the files or modifications. If the modifications are okay, then go back to the master and merge them manually.
 
 git checkout master
 
 git merge origin/master
 
 
 
 
 
 
 

4.	Git Merging, Git Tagging
5.	Git Rebase, Stashing, Squash, Rearranging Commit history
6.	Branching Strategies
7.	SSH Key generation, Cloning Repositories, Git Pull, Push and Fetch
8.	P4Merge tool. Git Diff

Devops engineer topics
--------------------------
9.	Download Git and Instal (It is stright forward)
 
 https://git-scm.com/downloads

10. Azure Repo Administration
11.	Real time Branching Design patterns
12.	Understand UseCases for GIT



